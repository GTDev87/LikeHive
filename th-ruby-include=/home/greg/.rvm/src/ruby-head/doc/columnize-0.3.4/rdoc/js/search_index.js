var search_data = {"index":{"searchIndex":["columnize","object","cell_size()","columnize()","parse_columnize_options()","copying","readme","makefile"],"longSearchIndex":["columnize","object","columnize#cell_size()","columnize#columnize()","columnize#parse_columnize_options()","","",""],"info":[["Columnize","","Columnize.html","","<p>Sets constant Columnize::VERSION, the version number of this package. It is\nused in Gem creation but …\n"],["Object","","Object.html","",""],["cell_size","Columnize","Columnize.html#method-i-cell_size","(cell, term_adjust)","<p>Return the length of String <code>cell</code>. If Boolean\n<code>term_adjust</code> is true, ignore terminal sequences in\n<code>cell</code>. …\n"],["columnize","Columnize","Columnize.html#method-i-columnize","(*args)","<p>or arranged horizontally:\n\n<pre class=\"ruby\">[<span class=\"ruby-string\">'1'</span>, <span class=\"ruby-string\">'2,'</span>, <span class=\"ruby-string\">'3'</span>, <span class=\"ruby-string\">'4'</span>] =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">'1  2\\n3  4\\n'</span>\n</pre>\n<p>Each column is only as wide possible, …\n"],["parse_columnize_options","Columnize","Columnize.html#method-i-parse_columnize_options","(args)","<p>Options parsing routine for Columnize::columnize. In the preferred newer\nstyle, <code>args</code> is either a hash …\n"],["COPYING","","COPYING.html","","<p>Columnize is copyrighted free software by Rocky Bernstein\n&lt;rocky@rubyforge.org&gt;.\n<p>You can redistribute …\n"],["README","","README.html","","<p>Columnize - Module to show an Array formatted as a String aligned in columns. \n<p>Summary\n<p>In showing a long …\n"],["Makefile","","lib/Makefile.html","","<p># Whatever it is you want to do, it should be forwarded to the  # to\ntop-level irectories PHONY=check …\n"]]}}